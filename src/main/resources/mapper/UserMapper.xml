<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fan.whale.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="cn.fan.whale.entity.UserEntity">
        <id column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="mail" jdbcType="VARCHAR" property="mail" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="available" jdbcType="INTEGER" property="available" />
        <result column="role_id" jdbcType="INTEGER" property="roleId" />
        <result column="avatar_path" jdbcType="VARCHAR" property="avatarPath" />
        <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
        <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
        <association property="roleEntity" javaType="cn.fan.whale.entity.RoleEntity">
            <id property="roleId" column="role_id"/>
            <result property="role_name" column="roleName"/>
            <result property="role_code" column="roleCode"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, username, password, nick_name, mail, phone, `state`, role_id, avatar_path, ctime, mtime, last_login_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
            u.user_id, u.username, u.password, u.nick_name, u.mail, u.phone, u.available, u.role_id, u.avatar_path, u.ctime, u.mtime, u.last_login_time,
            r.role_id, r.role_name, r.role_code
        from whale_user u
        left join whale_role r on r.role_id=u.role_id
        where u.user_id = #{userId}
    </select>
    <select id="selectBySelective" resultMap="BaseResultMap">
        select
            u.user_id, u.username, u.password, u.nick_name, u.mail, u.phone, u.available, u.role_id, u.avatar_path, u.ctime, u.mtime, u.last_login_time,
            r.role_id, r.role_name, r.role_code
        from whale_user u
        left join whale_role r on r.role_id=u.role_id
        <where>
            <if test="username != null">
                u.username = #{username}
            </if>
            <if test="nickName != null">
                u.nick_name like concat('%', #{nickName}, '%')
            </if>
            <if test="mail != null">
                u.mail like concat('%', #{mail}, '%')
            </if>
            <if test="phone != null">
                u.phone = #{phone}
            </if>
            <if test="available != null">
                u.available = #{available}
            </if>
        </where>
    </select>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="cn.fan.whale.entity.UserEntity" useGeneratedKeys="true">
        insert into whale_user
            (username, password, nick_name, mail, phone, available, role_id, avatar_path, ctime, mtime, last_login_time)
        values
            (#{username}, #{password}, #{nickName},
            #{mail}, #{phone}, #{available},
            #{roleId}, #{avatarPath}, #{ctime}, #{mtime}, #{lastLoginTime} )
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tuner.statistic.bean.TdDataOcpxEntity">
        update whale_user
        <set>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="mail != null">
                mail = #{mail},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="available != null">
                available = #{available},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="avatarPath != null">
                avatar_path = #{avatarPath},
            </if>
            <if test="mtime != null">
                mtime = #{mtime},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime},
            </if>
        </set>
        where user_id = #{userId}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from whale_user
        where user_id = #{userId}
    </delete>
</mapper>